/**
 * Created by Hector on 5/4/2017.
 */

import React from 'react';
import Popup from '../Tools/Popup.jsx';
import QuestionsTable from '../Questions/QuestionsTable.jsx';
import QuestionsLoader from '../Questions/QuestionsLoader.jsx';
import QuestionCreator from '../Questions/QuestionCreator.jsx';
import QuestionsController from '../Questions/QuestionsController.jsx';
import Layout from '../Template/Layout.jsx';
import StaffLayoutTemplate from '../LayoutTemplates/StaffLayoutTemplate.jsx';
import QuestionsTableHeader from '../Questions/QuestionsTableHeader.jsx';
import SimpleContainer from '../Tools/SimpleContainer.jsx';
class QuestionsPage extends React.Component {

    static childContextTypes  = {};
    static contextTypes = {
        QuestionsController:React.PropTypes.shape({
            Refresh:React.PropTypes.func,
            setNumberPerPage:React.PropTypes.func,
            setCurrentPage:React.PropTypes.func,
            nextPage:React.PropTypes.func,
            previousPage:React.PropTypes.func,
            searchOn:React.PropTypes.func,
            searchOff:React.PropTypes.func,
            setSearch:React.PropTypes.func,
            clearSelection:React.PropTypes.func,
            setSelection:React.PropTypes.func,
            addSelection:React.PropTypes.func,
            removeSelection:React.PropTypes.func,
            Questions:React.PropTypes.array
        })
    };
    static defaultProps = {};
    static propTypes = {};

    state = {};

    constructor(props) {
        super(props);
    }


    componentWillMount() {
        // Called When is about to mount
    }

    componentDidMount() {
        // Called When it does mount
    }

    componentWillUnmount() {
        // Called When it unmounts
    }

    componentWillReceiveProps(props, context) {
        // Called When it receives props & context
    }

    componentWillUpdate() {
        // Right before rendering. Dont Do setStat here.
    }

    componentDidUpdate() {
        // Place to chech for dom stuff
    }

    render() {
        let {children, ...rest}=this.props;


        return <Layout  PageTitle={"Questions"} Template={StaffLayoutTemplate} {...rest}>
                        <Layout.Header>
                        </Layout.Header>
                        <Layout.LeftSidePanel>
                        </Layout.LeftSidePanel>
                        <Layout.Body className="section-current-course-content">
                            <SimpleContainer>
                                        <div className="questions-page">
                                            <QuestionsTableHeader/>
                                            <QuestionCreator/>
                                            <QuestionsTable Questions={this.context.QuestionsController.Questions}/>
                                        </div>
                            </SimpleContainer>
                        </Layout.Body>
                    </Layout>


    }
}

export default QuestionsPage;