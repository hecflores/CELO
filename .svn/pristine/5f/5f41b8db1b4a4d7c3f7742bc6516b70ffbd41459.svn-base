<?php
/**
 * Created by PhpStorm.
 * User: Hector
 * Date: 2/23/2017
 * Time: 9:50 AM
 */

namespace Administrator\Controller;


use Application\EmailService;
use Application\Info;
use Application\Roles;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\Mvc\MvcEvent;
use Zend\Permissions\Rbac\Role;
use Zend\View\Model\ViewModel;

class UserController  extends AbstractActionController
{
    public function onDispatch(MvcEvent $e)
    {

        Roles::SetRole("Administrator");

        $navigation=new ViewModel();
        $navigation->setTemplate("administrator/layout/navigation");

        $banner=new ViewModel();
        $banner->setTemplate("administrator/layout/banner");

        $e->getViewModel()->addChild($navigation,"navigation");
        $e->getViewModel()->addChild($banner,"banner");

        $parent=parent::onDispatch($e); // TODO: Change the autogenerated stub

        /*******************************************************************/
        if(!Info::LoginService()->IsAuthorized(Roles::GetRole()))
        {
            $this->redirect()->toRoute("administrator/login");
            return;
        }


        /*******************************************************************/
        return $parent;
    }

    public function indexAction()
    {
        $view=new ViewModel();
        $view->setTemplate('administrator/home');

        return $view;
    }
    public function logoutAction()
    {
        Info::LoginService()->SignOut();

        $this->redirect()->toRoute("administrator/login");
    }
    public function sectionDetailsAction()
    {
        $courseCatagory=$this->params()->fromRoute("courseCatagory");
        $courseID=$this->params()->fromRoute("courseID");
        $sectionID=$this->params()->fromRoute("sectionID");

        $course=Info::CourseTable()->find($courseCatagory,$courseID);

        $section=Info::SectionTable()->find($course,$sectionID);

        $view=new ViewModel();
        $view->setTemplate("courses/sections/details");
        $view->setVariable("section",$section);

        return $view;
    }
    public function courseDetailsAction()
    {
        $courseCatagory=$this->params()->fromRoute("courseCatagory");
        $courseID=$this->params()->fromRoute("courseID");

        $course=Info::CourseTable()->find($courseCatagory,$courseID);

        $view=new ViewModel();
        $view->setTemplate("courses/details");

        /*******************************************************************/
        $view->setVariable("course",$course);

        return $view;
    }
    public function sectionsAction()
    {
        $courseCatagory=$this->params()->fromRoute("courseCatagory");
        $courseID=$this->params()->fromRoute("courseID");

        $course=Info::CourseTable()->find($courseCatagory,$courseID);

        $view=new ViewModel();
        $view->setTemplate("courses/sections/index");


        /*******************************************************************/
        $view->setVariable("sections",$course->getSections());
        $view->setVariable("parameters",$this->params()->fromRoute());

        return $view;
    }
    public function addSectionAction()
    {
        $view=new ViewModel();
        $view->setTemplate("courses/sections/add");

        $courseCatagory=$this->params()->fromRoute("courseCatagory");
        $courseID=$this->params()->fromRoute("courseID");

        $course=Info::CourseTable()->find($courseCatagory,$courseID);

        if($this->getRequest()->isPost()){
            $data=$this->params()->fromPost();


            $section=Info::SectionTable()->save($course,$data["SectionNumber"],$data);
            if($section==null){
                $view->setVariable("error","Unable to add Section {$data["SectionNumber"]}");
                return $view;
            }
            $this->redirect()->toRoute("administrator/courses/course/sections",$this->params()->fromRoute());
            return $view;
        }

        return $view;


    }
    public function coursesAction()
    {
        $view=new ViewModel();
        $view->setTemplate("courses/index");

        /*******************************************************************/
        $view->setVariable("courses",Info::CourseTable()->get());

        return $view;
    }

    public function addCoursesAction()
    {

        $view=new ViewModel();
        $view->setTemplate("courses/add-course");

        /*******************************************************************/
        if ($this->getRequest()->isPost())
        {

            /*******************************************************************/
            $CourseID=$this->params()->fromPost("CourseID");
            $CourseCatagory=$this->params()->fromPost("CourseCatagory");
            if(($found=Info::CourseTable()->find($CourseCatagory,$CourseID))!=null)
            {
                $view->setVariable("existed",true);
                $view->setVariable("found",$found);
                return $view;
            }
            $postParameters=$this->params()->fromPost();
            Info::CourseTable()->save($postParameters);

            $this->redirect()->toRoute("administrator/courses");
            return $view;
        }


        /*******************************************************************/
        return $view;
    }
    public function invitationsAction()
    {
        $view=new ViewModel();
        $view->setTemplate("administrator/invitations/invitations");
        $view->setVariable("invitations",Info::InvitationTable()->getUsersOutgoingInvites());

        return $view;
    }
    public function createInvitationAction()
    {
        $view=new ViewModel();
        $view->setTemplate("administrator/invitations/add-invitation");



        /*******************************************************************/
        if ($this->getRequest()->isPost())
        {
            $info=$this->params()->fromPost();



            if($info["ReasonID"]=="Ins_Reg"){
                $invitation=Info::InvitationTable()->makeJoinInstructorCeloInvitation($info["Email"]);
                EmailService::SendEmail($info["Email"],"Instructor Invite(CELO)","<h1>You have been invited to registetr for <b>CELO</b></h1><a href='http://uh-celo.local/instructor/invitation/{$invitation->getInvitationID()}'>Clear Here</a>");
            }

            $this->redirect()->toRoute("administrator");
            return;
        }

        $view->setVariable("invitations",Info::InvitationTable()->getUsersOutgoingInvites());

        return $view;
    }


}