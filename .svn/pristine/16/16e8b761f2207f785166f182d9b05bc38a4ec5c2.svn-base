<?php
/**
 * Zend Framework (http://framework.zend.com/)
 *
 * @link      http://github.com/zendframework/ZendSkeletonApplication for the canonical source repository
 * @copyright Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)
 * @license   http://framework.zend.com/license/new-bsd New BSD License
 */

namespace Application\Controller;

use Application\Info;
use Application\Roles;
use Application\Service\LoginService;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\JsonModel;
use Zend\View\Model\ViewModel;
use Zend\Mvc\MvcEvent;
use Zend\View\View;

class RepositoryController extends AbstractActionController
{
    public function onRender(MvcEvent $e)
    {
        $e->getViewModel()->setTemplate("application/tools/json");
    }
    public function indexAction()
    {
        return new JsonModel(array(
            "developer" => "Hector Flores",
            "where_everything_is"=>"true"
        ));
    }

    /***********************************************************************/
    /* Users                                                               */
    /***********************************************************************/
    public function UsersAction()
    {
        $dumb=array(
            "data" =>  Info::UserTable()->get($this->params()->fromQuery(),true),
            "success" => true
        );

        return new JsonModel($dumb);
    }
    public function UserAction()
    {
        $id=$this->params()->fromRoute("id");

        if($this->getRequest()->isPost()){

        }
        if($this->getRequest()->isGet()){

        }
        if($this->getRequest()->isDelete()){

        }
        if($this->getRequest()->isPatch()){

        }
        $dumb=array(
            "success" => true
        );

        return new JsonModel($dumb);
    }

    /***********************************************************************/
    /* Courses                                                             */
    /***********************************************************************/
    public function CoursesAction()
    {

        return new JsonModel(array(
            "data" =>  Info::CourseTable()->get($this->params()->fromQuery(),true),
            "success" => true
        ));
    }
    public function CourseAction()
    {
        $id=$this->params()->fromRoute("id");

        if($this->getRequest()->isPost()){

        }
        if($this->getRequest()->isGet()){

        }
        if($this->getRequest()->isDelete()){

        }
        if($this->getRequest()->isPatch()){

        }
        $dumb=array(
            "success" => true
        );

        return new JsonModel($dumb);
    }
    /***********************************************************************/
    /* Sections                                                            */
    /***********************************************************************/
    public function SectionsAction()
    {
        return new JsonModel(array(
            "data" =>  Info::SectionTable()->get($this->params()->fromQuery(),true),
            "success" => true
        ));
    }
    public function SectionAction()
    {
        $id=$this->params()->fromRoute("id");

        if($this->getRequest()->isPost()){

        }
        if($this->getRequest()->isGet()){

        }
        if($this->getRequest()->isDelete()){

        }
        if($this->getRequest()->isPatch()){

        }
        $dumb=array(
            "success" => true
        );

        return new JsonModel($dumb);
    }
    /***********************************************************************/
    /* Questions                                                           */
    /***********************************************************************/
    public function QuestionsAction()
    {
        return new JsonModel(array(
            "data" =>  Info::QuestionsTable()->get($this->params()->fromQuery(),true),
            "success" => true
        ));
    }
    public function QuestionAction()
    {
        $id=$this->params()->fromRoute("id");

        if($this->getRequest()->isPost()){

        }
        if($this->getRequest()->isGet()){

        }
        if($this->getRequest()->isDelete()){

        }
        if($this->getRequest()->isPatch()){

        }
        $dumb=array(
            "success" => true
        );

        return new JsonModel($dumb);
    }

    /***********************************************************************/
    /* Question Types                                                      */
    /***********************************************************************/
    public function QuestionTypesAction()
    {
        return new JsonModel(array(
            "data" =>  Info::QuestionTypesTable()->get($this->params()->fromQuery(),true),
            "success" => true
        ));
    }
    public function QuestionTypeAction()
    {
        $id=$this->params()->fromRoute("id");

        if($this->getRequest()->isPost()){

        }
        if($this->getRequest()->isGet()){

        }
        if($this->getRequest()->isDelete()){

        }
        if($this->getRequest()->isPatch()){

        }
        $dumb=array(
            "success" => true
        );

        return new JsonModel($dumb);
    }

}
