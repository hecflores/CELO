<?php
/**
 * Created by PhpStorm.
 * User: Hector
 * Date: 3/9/2017
 * Time: 3:31 AM
 */

namespace Application\Model;


use Application\Info;
use Application\QuestionManager;
use Zend\Db\ResultSet\ResultSet;
use Zend\Db\Sql\Select;
use Zend\Db\Sql\Sql;
use Zend\Db\TableGateway\TableGateway;

class AssessmentTable
{
    protected $tableGateway;

    public function __construct(TableGateway $tableGateway)
    {
        $this->tableGateway = $tableGateway;
    }

    /**
     * @param int $AssessmentID
     * @return Assessment|null
     */
    public function GetAssessmentFromID($AssessmentID){

        return $this->tableGateway->select(array("AssessmentID"=>$AssessmentID))->current();
    }

    /**
     * @param CourseContent $CourseContent_or_ID
     * @return Assessment|null
     */
    public function GetAssessmentForCourseContent($CourseContent_or_ID){
        /********************************************************************/
        if($CourseContent_or_ID instanceof CourseContent){
            $CourseContent_or_ID=$CourseContent_or_ID->getContentID();
        }

        return $this->tableGateway->select(array("AssociatedCourseContentID"=>$CourseContent_or_ID))->current();
    }

    /** Creates a new Assessment with that corresponds to a course gradable content
     * @param $data
     * @param $AssociatedCourseContentID
     * @return int
     */
    public function CreateNewAssessment($data,$AssociatedCourseContentID){
        $data["AssociatedCourseContentID"]=$AssociatedCourseContentID;
        $data["CreatedBy"]=Info::getCurrentUser()->getUserID();

        $this->tableGateway->insert($data);
        $id=$this->tableGateway->getLastInsertValue();
        return $id;
    }

    /**
     * @param int|string|Assessment $Assessment_or_ID
     * @param int|string|QuestionManager|Question $Question_or_ID
     * @param int|string $Weight
     * @return int
     */
    public function AddQuestion($Assessment_or_ID, $Question_or_ID,$Weight){

        /********************************************************************/
        /* Fixing Variables                                                 */
        /********************************************************************/
        if($Assessment_or_ID instanceof Assessment){
            $Assessment_or_ID=$Assessment_or_ID->getAssessmentID();
        }

        /********************************************************************/
        if($Question_or_ID instanceof Question){
            $Question_or_ID=$Question_or_ID->getQuestionID();
        }
        else if($Question_or_ID instanceof QuestionManager){
            $Question_or_ID=$Question_or_ID->getQuestion()->getQuestionID();
        }

        $data=array(
            "AssessmentID"=>$Assessment_or_ID,
            "QuestionID"=>$Question_or_ID,
            "Weight"=>$Weight,
            "AddedBy"=>Info::getCurrentUser()->getUserID());


        $id=Info::PerformInsert("AssessmentQuestions",$data);
        return $id;
    }

    /**
     * @param int|string|Assessment $Assessment_or_ID
     * @return string
     */
    public function StartAssessment($Assessment_or_ID){

        /********************************************************************/
        /* Fixing Variables                                                 */
        /********************************************************************/
        if($Assessment_or_ID instanceof Assessment){
            $Assessment_or_ID=$Assessment_or_ID->getAssessmentID();
        }

        /********************************************************************/
        $data=array(
            "AssessmentID"=>$Assessment_or_ID,
            "StartTime"=>"CURRENT_TIMESTAMP",
            "AnsweringBy"=>Info::getCurrentUser()->getUserID(),
            "SessionID"=>uniqid());

        /********************************************************************/
        $id=Info::PerformInsert("RunningAssessments",$data);

        /********************************************************************/
        return $data["SessionID"];
    }


    /**
     * @param int|string $SessionID
     * @return array
     */
    public function getAssessmentSessionQuestions($SessionID){
        $sql=Info::SQL();
        $select=$sql->select()->from(array("RA"=>"RunningAssessments"))
            ->join(array("RsQ"=>"AssessmentQuestions"),"RsQ.AssessmentID=RA.AssessmentID",Select::SQL_STAR)
            ->join(array("AnQ"=>"AnsweredQuestions"),"AnQ.SessionID=RA.SessionID",Select::SQL_STAR,Select::JOIN_LEFT)
            ->where(array(
                "RA.SessionID"=>$SessionID
            ));

        $query=$sql->prepareStatementForSqlObject($select);

        $result=$query->execute();
        $resultSet = new ResultSet(); // Zend\Db\ResultSet\ResultSet
        $resultSet->setArrayObjectPrototype(new AssessmentQuestion()); // <-- HERE you set your entity object
        $resultSet->initialize($result);
        return $resultSet;


    }


    /**
     * @param int|string|Assessment $Assessment_or_ID
     * @return array
     */
    public function getAssessmentIssuedQuestions($Assessment_or_ID){
        /********************************************************************/
        /* Fixing Variables                                                 */
        /********************************************************************/
        if($Assessment_or_ID instanceof Assessment){
            $Assessment_or_ID=$Assessment_or_ID->getAssessmentID();
        }

        $sql=Info::SQL();
        $select=$sql->select("AssessmentQuestions")
            ->columns(array("AssessmentQuestionID","QuestionID","Weight","AddedBy"))
            ->where(array(
                "AssessmentID"=>$Assessment_or_ID
            ));
        $query=$sql->prepareStatementForSqlObject($select);
        $result=$query->execute();
        $resultSet = new ResultSet(); // Zend\Db\ResultSet\ResultSet
        $resultSet->setArrayObjectPrototype(new AssessmentQuestion()); // <-- HERE you set your entity object
        $resultSet->initialize($result);
        return $resultSet;
    }

    /**
     * @param int|string|Assessment $Assessment_or_ID
     * @param int|string|User $User_or_UserID
     * @return RunningAssessment|null
     */
    public function getRunningInstance($Assessment_or_ID,$User_or_UserID){
        /********************************************************************/
        /* Fixing Variables                                                 */
        /********************************************************************/
        if($Assessment_or_ID instanceof Assessment){
            $Assessment_or_ID=$Assessment_or_ID->getAssessmentID();
        }
        if($User_or_UserID instanceof User){
            $User_or_UserID=$User_or_UserID->getUserID();
        }

        /********************************************************************/
        $sql=Info::SQL();
        $select=$sql->select("RunningAssessments")
            ->where(array(
                "AssessmentID"=>$Assessment_or_ID,
                "AnsweringBy"=>$User_or_UserID
            ));
        $query=$sql->prepareStatementForSqlObject($select);
        $result=$query->execute();
        $resultSet = new ResultSet(); // Zend\Db\ResultSet\ResultSet
        $resultSet->setArrayObjectPrototype(new RunningAssessment()); // <-- HERE you set your entity object
        $resultSet->initialize($result);
        return $resultSet->current();
    }
}