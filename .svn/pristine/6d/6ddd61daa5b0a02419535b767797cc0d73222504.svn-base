/**
 * Created by Hector on 5/4/2017.
 */

import React from 'react';


class UserActionItem extends React.Component {

    static childContextTypes = {};
    static contextTypes = {};
    static defaultProps = {
        onClick:function(){},
        onHover:function(){}
    };
    static propTypes = {
        User:React.PropTypes.object,
        onClick:React.PropTypes.func,
        onHover:React.PropTypes.func
    };

    state = {};


    constructor(props) {
        super(props);
    }

    getChildContext() {
        return {};
    }

    componentWillMount() {
        // Called When is about to mount
    }

    componentDidMount() {
        // Called When it does mount
    }

    componentWillUnmount() {
        // Called When it unmounts
    }

    componentWillReceiveProps(props, context) {
        // Called When it receives props & context
    }

    componentWillUpdate() {
        // Right before rendering. Dont Do setStat here. 
    }

    componentDidUpdate() {
        // Place to chech for dom stuff
    }

    render() {
        return (
            <div onClick={()=>{this.props.onClick(this.props.User)}} onMouseMove={()=>{this.props.onHover(this.props.User)}} className={"user-action-item-container "+this.props.User.Role}>
                {(function(){
                    if(typeof this.props.User != "object"){
                        return <div className="missing">No User Found</div>
                    }
                    if(this.props.User.Role=="Student") {
                        return <div className="UHID">{this.props.User.UHID}</div>
                    }
                    return <div className="user-name">{this.props.User.LastName+", "+this.props.User.FirstName}</div>

                }.bind(this))()}
            </div>
        );
    }
}

export default UserActionItem;