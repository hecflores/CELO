import React from 'react';
import APIComponent from '../Containers/APIComponent.jsx';
import DataInput from '../Containers/DataInput.jsx';
import CourseContent from '../CourseContent/CourseContent.jsx';
import SectionsAPI from "../../libaries/APIs/SectionsAPI.jsx";
import CourseTitle from '../Courses/CourseTitle.jsx';

import {ButtonGroup,Button} from 'react-bootstrap';
import Loader from '../Containers/Loader.jsx';
class Section extends React.Component{
    constructor(props) {
        super(props);
        this.state={
            Fetching:true
        };

    }

    render(){
        return (
            <div className="section-root-container">
                {this.props.SectionInfo?(
                    <div className="section-loaded">

                        <div className="section-course-content-body-container">
                            <div className="root-course-content">
                                <CourseContent CourseContent={this.props.SectionInfo["CourseContent"]} CourseContentID={this.props.SectionInfo["CourseContent"]["ContentID"]}/>
                            </div>
                            {this.props.children}
                        </div>

                    </div>
                ):(
                    <APIComponent onSubmit={()=>{this.setState({Fetching:false})}} APIListener={SectionsAPI.instance} Event="get" initialInput={{id:this.props.SectionID}} Fetch={this.state.Fetching} >
                        {function(data,change,getTrigger,putTrigger) {
                            return (<Section SectionID={this.props.SectionID} SectionInfo={data}>{this.props.children}</Section>);
                        }.bind(this)}
                    </APIComponent>
                )}
                </div>
        );
    }
}

Section.propTypes={
    SectionInfo:React.PropTypes.object,
    SectionID:React.PropTypes.number.isRequired,

};

Section.Displays={
    default:function(course){

        return (<div >{course["CourseCategory"]+" "+course["CourseID"]+"-"+course["CourseName"]}</div>)
    },
    ver1_replica:function(course, index){
        return (
            <CourseDisplay Course={course} Index={index}/>
        )
    }
};


export default Section;