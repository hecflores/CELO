<?php
/**
 * Created by PhpStorm.
 * User: Hector
 * Date: 2/27/2017
 * Time: 3:25 AM
 */

namespace Application\Model;


use Application\Info;
use Application\QuestionManager;
use Application\QuestionTypeManager;
use Application\Roles;

class Question
{
    protected $QuestionID=null;
    protected $QuestionTypeID=null;
    protected $SrcDirectory=null;
    protected $Name=null;
    protected $CreatedBy=null;
    protected $ExpectedAnswer;
    protected $data;
    protected $Question;
    protected $JSONParameters;

    function exchangeArray($data)
    {
        $this->QuestionID=(isset($data["QuestionID"]))?$data["QuestionID"]:null;
        $this->QuestionTypeID=(isset($data["QuestionTypeID"]))?$data["QuestionTypeID"]:null;
        $this->SrcDirectory=(isset($data["SrcDirectory"]))?$data["SrcDirectory"]:null;
        $this->Question=(isset($data["Question"]))?$data["Question"]:null;
        $this->ExpectedAnswer=(isset($data["ExpectedAnswer"]))?$data["ExpectedAnswer"]:null;
        $this->CreatedBy=(isset($data["CreatedBy"]))?$data["CreatedBy"]:null;
        $this->JSONParameters=(isset($data["JSONParameters"]))?$data["JSONParameters"]:null;
        $json=json_decode($this->JSONParameters,true);
        $this->JSONParameters=$json;
        $this->data=$data;
    }
    function toArray(){
        $returnArray=array();
        $this->QuestionID==null?true:$returnArray["QuestionID"]=$this->QuestionTypeID;
        $this->QuestionTypeID==null?true:$returnArray["QuestionTypeID"]=$this->QuestionTypeID;
        $this->SrcDirectory==null?true:$returnArray["SrcDirectory"]=$this->SrcDirectory;
        $this->Name==null?true:$returnArray["Name"]=$this->Name;
        $this->ExpectedAnswer==null?true:$returnArray["ExpectedAnswer"]=$this->ExpectedAnswer;
        $this->CreatedBy=(isset($data["CreatedBy"]))?$data["CreatedBy"]:null;

        return $returnArray;
    }
    /**
     * @return mixed
     */
    public function getQuestionTypeID()
    {
        return $this->QuestionTypeID;
    }

    /**
     * @return mixed
     */
    public function getSrcDirectory()
    {
        return $this->SrcDirectory;
    }

    /**
     * @return mixed
     */
    public function getName()
    {
        return $this->Name;
    }

    /**
     * @param mixed $Name
     */
    public function setName($Name)
    {
        $this->Name = $Name;
    }

    /**
     * @return null
     */
    public function getQuestionID()
    {
        return $this->QuestionID;
    }

    /**
     * @return QuestionType
     */
    public function getQuestionType(){
        return Info::QuestionTypesTable()->getFromById($this->getQuestionTypeID());
    }
    public function getQuestionTypeManager(){
        return new QuestionTypeManager($this->getQuestionTypeID());
    }

    /**
     * @return mixed
     */
    public function getExpectedAnswer()
    {
        return $this->ExpectedAnswer;
    }

    /**
     * @return null
     */
    public function getCreatedBy()
    {
        return $this->CreatedBy;
    }

    /**
     * @return User
     */
    public function getCreatedByUser(){
        return Info::UserTable()->getUserById($this->getCreatedBy());
    }

    /**
     * @return mixed
     */
    public function getData()
    {
        if(Roles::GetRole()==Roles::$STUDENT){
            return array("QuestionID"=>$this->getQuestionID(),
                "QuestionTypeID"=>$this->getQuestionTypeID(),
                "JSONParameters"=>$this->getParameters());
        }
        return $this->data;
    }

    /**
     * @return mixed
     */
    public function getQuestion()
    {
        return $this->Question;
    }

    /**
     * @return mixed
     */
    public function getParameters()
    {
        return $this->JSONParameters;
    }
    public function setParameters($parameters){
        $data=array("JSONParameters"=>json_encode($parameters,JSON_FORCE_OBJECT));
        if(isset($parameters["question"]))
        {
            $data["Question"]=$parameters["question"];
        }

        Info::QuestionsTable()->UpdateInsertData($this->getQuestionID(),$data);
        $this->JSONParameters=$parameters;
    }
    public function setAnswer($answer)
    {
        Info::QuestionsTable()->UpdateInsertData($this->getQuestionID(),array("ExpectedAnswer"=>$answer));
        $this->ExpectedAnswer=$answer;
    }
    public function getAnswer()
    {
        return $this->getExpectedAnswer();
    }

    public function getDataJSON()
    {
        return json_encode($this->getData(),JSON_FORCE_OBJECT);
    }

}