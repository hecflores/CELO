/* DROP TABLE Questions;*/
/*DROP TABLE QuestionTypes;*/
DROP TABLE CourseContent;
DROP TABLE SectionUsers;
DROP TABLE Sections;
DROP TABLE Courses;
DROP TABLE CourseStatus;
DROP TABLE UserSessions;
DROP TABLE Invitation;
DROP TABLE InvitationReasons;
DROP TABLE Users;



/**************************************************************************/
/* Users                                                                  */
/**************************************************************************/
DROP TABLE Users;
CREATE TABLE Users
(
  UserID varchar(36),
  FirstName VARCHAR(200),
  LastName VARCHAR(200),
  Email VARCHAR(200),
  PhoneNumber VARCHAR(200),
  UserName VARCHAR(200) NOT NULL,
  Password VARCHAR(200) NOT NULL,
  Role VARCHAR(50) NOT NULL CHECK(Role IN ('Admin','Instructor','TA','Student')),
  UHID INTEGER(7),
  PRIMARY KEY(UserID,UserName,Role)
);


/**************************************************************************/
/* User Sessions                                                          */
/**************************************************************************/
DROP TABLE UserSessions;
CREATE TABLE UserSessions
(
  SessionID varchar(36),
  UserID varchar(36),
  TimeLastAccessed TIMESTAMP,
  MAC_Address VARCHAR(300),
  Role VARCHAR(50),
  PRIMARY KEY(SessionID),
  FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE
);
/**************************************************************************/
/* CourseStatus                                                           */
/**************************************************************************/
DROP TABLE CourseStatus;
CREATE TABLE CourseStatus
(
  CourseStatus VARCHAR(200),
  AnyTags VARCHAR(200),
  PRIMARY KEY (CourseStatus)
);

/**************************************************************************/
/* Course                                                                */
/**************************************************************************/
DROP TABLE Courses;
CREATE TABLE Courses
(
  CourseUniqueID BIGINT UNIQUE AUTO_INCREMENT NOT NULL ,
  CourseName VARCHAR(100),
  CourseCategory CHAR(4),
  Setup BOOL,
  CourseID INTEGER,
  Description VARCHAR(500),
  CourseStatus VARCHAR(200),
  CreatedBy VARCHAR(36),
  PRIMARY KEY(CourseUniqueID),
  FOREIGN KEY(CreatedBy) REFERENCES Users(CreatedBy),
  FOREIGN KEY(CourseStatus) REFERENCES CourseStatus(CourseStatus)
);


/**************************************************************************/
/* Section                                                                */
/**************************************************************************/
DROP TABLE Sections;
CREATE TABLE Sections
(
  SectionID BIGINT UNIQUE AUTO_INCREMENT NOT NULL ,
  SectionNumber INTEGER,
  StartDate DATETIME,
  EndDate DATETIME,
  Location VARCHAR(200),
  TextBookInformation VARCHAR(500),
  CourseUniqueID BIGINT,
  CreatedBy VARCHAR(36),
  MainCourseContentID BIGINT,

  PRIMARY KEY(SectionID),
  FOREIGN KEY(CourseUniqueID) REFERENCES Courses(CourseUniqueID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(MainCourseContentID) REFERENCES CourseContent(ContentID)

);


/**************************************************************************/
/* Section Users                                                          */
/**************************************************************************/
DROP TABLE SectionUsers;
CREATE TABLE SectionUsers
(
  SectionID BIGINT,
  AddedOn DATETIME,
  AssignedBy VARCHAR(36),
  UserID VARCHAR(36),


  PRIMARY KEY(SectionID,UserID),
  FOREIGN KEY(SectionID) REFERENCES Sections(SectionID),
  FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(AssignedBy) REFERENCES Users(UserID)
);
/**************************************************************************/
/* Invitation Reasons                                                     */
/**************************************************************************/
DROP TABLE InvitationReasons;
CREATE TABLE InvitationReasons
(
  ReasonID VARCHAR(10),
  ReasonString VARCHAR(200),
  RolesExcepted VARCHAR(200),
  PRIMARY KEY (ReasonID)
);

/**************************************************************************/
/* Invitation                                                             */
/**************************************************************************/
DROP TABLE Invitation;
CREATE TABLE Invitation
(
  InvitationID varchar(36),
  Accepted BOOL,
  Viewed BOOL,
  InvitedBy VARCHAR(36),
  Inviting VARCHAR(36),
  ReasonID VARCHAR(10),


  PRIMARY KEY(InvitationID),
  FOREIGN KEY(Inviting) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(InvitedBy) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(ReasonID) REFERENCES InvitationReasons(ReasonID) ON UPDATE CASCADE ON DELETE CASCADE
);
DROP TABLE Tags;
CREATE TABLE Tags(
  TagID  VARCHAR(100),
  ObjectID BIGINT NOT NULL,
  Category VARCHAR(100) NOT NULL CHECK(Category IN ('Assessments','Questions','QuestionTypes','CourseContents')),
  Rank INTEGER,
  PRIMARY KEY(TagID,ObjectID,Category)
);

/**************************************************************************/
/* Section Folders                                                        */
/**************************************************************************/
DROP TABLE CourseContent;
CREATE TABLE CourseContent
(
  ContentID BIGINT NOT NULL AUTO_INCREMENT,
  SectionID BIGINT NOT NULL ,
  Name VARCHAR(200),
  URL VARCHAR(200),
  Description VARCHAR(1000),
  ParentFolderID BIGINT,
  Type VARCHAR(200),
  Properties TEXT,
  Gradable BOOL,
  CreatedBy VARCHAR(36),
  RolesVisible VARCHAR(200), /* Role1|Role2|Role3 */


  PRIMARY KEY(ContentID),
  FOREIGN KEY(ParentFolderID) REFERENCES CourseContent(ContentID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(CreatedBy) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(SectionID) REFERENCES Sections(SectionID) ON UPDATE CASCADE ON DELETE CASCADE

);
DROP TABLE CourseContentTags;

INSERT INTO CourseContent (Name, Description,  Type, Properties) VALUES ('Home','This is the home','folder','{}');

/*
CREATE TABLE QuestionTypes
(
  QuestionTypeID BIGINT NOT NULL AUTO_INCREMENT,
  SrcDirectory VARCHAR(1000),
  Name VARCHAR(1000),
  CreatedBy VARCHAR(36),
  PRIMARY KEY(QuestionTypeID),
  FOREIGN KEY(CreatedBy) REFERENCES Users(UserID)

);*/
DROP TABLE QuestionTypesTags;

/* WE HAVE ALOT OF QUESTIONS WE DONT WANT TO LOOSE
DROP TABLE Questions;
CREATE TABLE Questions
(
  QuestionID BIGINT NOT NULL AUTO_INCREMENT,
  QuestionTypeID BIGINT,
  SrcDirectory VARCHAR(1000),
  Question VARCHAR(1000),
  ExpectedAnswer VARCHAR(1000),
  CreatedBy VARCHAR(36),
  JSONParameters TEXT,
  PRIMARY KEY(QuestionID),
  FOREIGN KEY (QuestionTypeID) REFERENCES QuestionTypes(QuestionTypeID),
  FOREIGN KEY(CreatedBy) REFERENCES Users(UserID)

); */
DROP TABLE Assessments;
CREATE TABLE Assessments(

  AssessmentID BIGINT NOT NULL AUTO_INCREMENT,
  Name VARCHAR(200),
  URL VARCHAR(200),
  Description VARCHAR(1000),
  Type VARCHAR(200),
  Properties TEXT,
  AssociatedCourseContentID BIGINT NOT NULL,
  CreatedBy VARCHAR(36),
  Timelimit INTEGER,


  PRIMARY KEY(AssessmentID),
  FOREIGN KEY(AssociatedCourseContentID) REFERENCES CourseContent(ContentID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(CreatedBy) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE

);
DROP TABLE AssessmentsTags;

DROP TABLE AssessmentQuestions;
CREATE TABLE AssessmentQuestions(
  AssessmentQuestionID BIGINT NOT NULL AUTO_INCREMENT ,
  AssessmentID BIGINT NOT NULL ,
  QuestionID BIGINT NOT NULL ,
  Weight INTEGER,
  AddedBy VARCHAR(36) NOT NULL,

  PRIMARY KEY(AssessmentQuestionID),
  FOREIGN KEY(AssessmentID) REFERENCES Assessments(AssessmentID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(QuestionID) REFERENCES Questions(QuestionID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(AddedBy) REFERENCES Users(AddedBy) ON UPDATE CASCADE ON DELETE CASCADE
);
DROP TABLE RunningAssessments;
CREATE TABLE RunningAssessments(
  AnsweredID BIGINT NOT NULL AUTO_INCREMENT,
  AssessmentID BIGINT NOT NULL,
  StartTime DATETIME DEFAULT NULL,
  EndTime DATETIME DEFAULT NULL,
  TotalPoints INTEGER,
  EarnedPoints INTEGER,
  AnsweringBy VARCHAR(36) NOT NULL,
  GradedBy VARCHAR(36),
  AnsweredGroupID BIGINT NOT NULL,


  PRIMARY KEY(AnsweredID),
  FOREIGN KEY(AssessmentID) REFERENCES Assessments(AssessmentID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(AnsweringBy) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(GradedBy) REFERENCES Users(GradedBy) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(AnsweredGroupID) REFERENCES AnsweredQuestionsGroups(AnsweredGroupID) ON UPDATE CASCADE ON DELETE CASCADE

);


DROP TABLE AnsweredQuestionsGroups;
CREATE TABLE AnsweredQuestionsGroups(
  AnsweredGroupID BIGINT NOT NULL AUTO_INCREMENT ,
  CreatedOn DATETIME,
  CreatedBy VARCHAR(36),
  Description VARCHAR(200),
  CourseContentID BIGINT,
  PRIMARY KEY(AnsweredGroupID),
  FOREIGN KEY(CourseContentID) REFERENCES CourseContent(CourseContentID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(CreatedBy) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP TABLE AnsweredQuestions;
CREATE TABLE AnsweredQuestions(
  AnsweredID BIGINT NOT NULL AUTO_INCREMENT ,
  AnsweredGroupID BIGINT,
  QuestionID BIGINT NOT NULL ,
  AnsweredHTML TEXT,               /* Once the question is answered. The HTML that is showing will be saved */
  AnsweredBy VARCHAR(36),
  AllowedAttempts INTEGER,
  Attempts INTEGER,
  PointsWorth INTEGER,
  CorrectAnswer VARCHAR(200),
  ChosenAnswer VARCHAR(200),
  IsCorrect BOOL NOT NULL,
  PRIMARY KEY(AnsweredID),
  FOREIGN KEY(AnsweredBy) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(QuestionID) REFERENCES Questions(QuestionID) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(AnsweredGroupID) REFERENCES AnsweredQuestionsGroups(AnsweredGroupID) ON UPDATE CASCADE ON DELETE CASCADE
);

DROP VIEW QuestionsReport;
CREATE VIEW QuestionsReport AS
  SELECT S1.*,S2.Name AS QuestionType, S3.FirstName, S3.LastName, S3.Email, S3.PhoneNumber
    FROM Questions AS S1
    JOIN QuestionTypes AS S2 ON S1.QuestionTypeID=S2.QuestionTypeID
    JOIN Users AS S3 ON S3.UserID=S1.CreatedBy;

DROP VIEW QuestionTypesReport;
CREATE VIEW QuestionTypesReport AS
  SELECT S1.*, S3.*
  FROM QuestionTypes AS S1
    JOIN Users AS S3 ON S3.UserID=S1.CreatedBy;

DROP VIEW AssessmentQuestionsReport;
CREATE VIEW AssessmentQuestionsReport AS
  SELECT
    S1.AssessmentID,
    S1.Weight,
    S1.AddedBy,
    S2.*
  FROM AssessmentQuestions AS S1
    JOIN QuestionsReport AS S2 ON S2.QuestionID=S1.QuestionID;

DROP VIEW RunningAssessmentsReport;
CREATE VIEW RunningAssessmentsReport AS
  SELECT
    S1.AnsweredID,
    S1.AssessmentID,
    S1.StartTime,
    S1.EndTime,
    S1.TotalPoints,
    S1.EarnedPoints,
    S1.AnsweringBy,
    S1.GradedBy,
    S1.AnsweredGroupID,
    S2.Name,
    S2.URL,
    S2.Description,
    S2.Type,
    S2.Properties,
    S2.AssociatedCourseContentID,
    S2.Timelimit
  FROM RunningAssessments AS S1
    JOIN Assessments AS S2 ON S2.AssessmentID=S1.AssessmentID;





DROP VIEW AnsweredQuestionsReport;
CREATE VIEW AnsweredQuestionsReport AS
  SELECT
    S1.AnsweredID,
    S1.AnsweredGroupID,
    S1.QuestionID,
    S1.AnsweredHTML,
    S1.AnsweredBy,
    S1.AllowedAttempts,
    S1.Attempts,
    S1.PointsWorth,
    S1.CorrectAnswer,
    S1.ChosenAnswer,
    S1.IsCorrect,

    S4.CreatedOn,
    S4.CreatedBy,
    S4.Description,

    S3.QuestionTypeID,
    S3.SrcDirectory,
    S3.Question,
    S3.ExpectedAnswer,
    S3.JSONParameters,

    S2.FirstName,
    S2.LastName,
    S2.Email,
    S2.PhoneNumber,
    S2.UserName,
    S2.Password,
    S2.Role,
    S2.UHID


  FROM AnsweredQuestions AS S1
  LEFT JOIN Users AS S2 ON S2.UserID=S1.AnsweredBy
  JOIN Questions AS S3 ON S3.QuestionID=S1.QuestionID
  JOIN AnsweredQuestionsGroups AS S4 ON S4.AnsweredGroupID=S1.AnsweredGroupID;


DROP VIEW CourseContentReport;
CREATE VIEW CourseContentReport AS
  SELECT
       S1.ContentID AS CourseContent_ContentID,
       S1.SectionID AS CourseContent_SectionID,
       S1.Name AS CourseContent_Name,
       S1.URL AS CourseContent_URL,
       S1.Description AS CourseContent_Description,
       S1.ParentFolderID AS CourseContent_ParentFolderID,
       S1.Type AS CourseContent_Type,
       S1.Properties AS CourseContent_Properties,
       S1.Gradable AS CourseContent_Gradable,
       S1.CreatedBy AS CourseContent_CreatedBy,
       S1.RolesVisible AS CourseContent_RolesVisible,

       S2.SectionID AS Sections_SectionID,
       S2.SectionNumber AS Sections_SectionNumber,
       S2.StartDate AS Sections_StartDate,
       S2.EndDate AS Sections_EndDate,
       S2.Location AS Sections_Location,
       S2.TextBookInformation AS Sections_TextBookInformation,
       S2.CourseCategory AS Sections_CourseCategory,
       S2.CourseID AS Sections_CourseID,
       S2.CreatedBy AS Sections_CreatedBy,
       S2.MainCourseContentID AS Sections_MainCourseContentID,

       S4.UserID AS Section_CreatedBy_UserID,
       S4.FirstName AS Section_CreatedBy_FirstName,
       S4.LastName AS Section_CreatedBy_LastName,
       S4.Email AS Section_CreatedBy_Email,
       S4.PhoneNumber AS Section_CreatedBy_PhoneNumber,
       S4.UserName AS Section_CreatedBy_UserName,
       S4.Password AS Section_CreatedBy_Password,
       S4.Role AS Section_CreatedBy_Role,
       S4.UHID AS Section_CreatedBy_UHID,

       S3.CourseName AS Course_CourseName,
       S3.CourseCategory AS Course_CourseCategory,
       S3.Setup AS Course_Setup,
       S3.CourseID AS Course_CourseID,
       S3.Description AS Course_Description,
       S3.CourseStatus AS Course_CourseStatus,
       S3.CreatedBy AS Course_CreatedBy

    FROM CourseContent AS S1
    LEFT JOIN Sections AS S2 ON S1.SectionID=S2.SectionID
    LEFT JOIN Users AS S4 ON S4.UserID=S2.CreatedBy
    LEFT JOIN Courses AS S3 ON S3.CourseCategory=S2.CourseCategory AND S3.CourseID=S2.CourseID




INSERT INTO CourseStatus (CourseStatus, AnyTags) VALUES ('Pending','');
INSERT INTO CourseStatus (CourseStatus, AnyTags) VALUES ('Waiting','');
INSERT INTO CourseStatus (CourseStatus, AnyTags) VALUES ('Online','');

INSERT INTO InvitationReasons (ReasonID, ReasonString) VALUES ('Ins_Reg','Register Instructor');
INSERT INTO InvitationReasons (ReasonID, ReasonString) VALUES ('Ins_Enrol','Add Instructor To Section');
INSERT INTO InvitationReasons (ReasonID, ReasonString) VALUES ('Reg_Ta','Register TA');
INSERT INTO InvitationReasons (ReasonID, ReasonString) VALUES ('Add_Ta','Add TA To Section');


INSERT INTO Users (UserID, FirstName, LastName, Email, PhoneNumber, UserName, Password, Role) VALUES
  (UUID(),'administrator1','administrator1','administrator1@email.com','123-123-1234','administrator1','administrator1','Administrator'),
  (UUID(),'administrator2','administrator2','administrator2@email.com','123-123-1234','administrator2','administrator2','Administrator'),
  (UUID(),'administrator3','administrator3','administrator3@email.com','123-123-1234','administrator3','administrator3','Administrator'),
  (UUID(),'administrator4','administrator4','administrator4@email.com','123-123-1234','administrator4','administrator4','Administrator');


INSERT INTO Users (UserID, FirstName, LastName, Email, PhoneNumber, UserName, Password, Role) VALUES
  (UUID(),'Instructor1','Instructor1','instructor1@email.com','123-123-1234','instructor1','instructor1','Instructor'),
  (UUID(),'Instructor1','Instructor1','instructor1@email.com','123-123-1234','instructor1','instructor1','Instructor'),
  (UUID(),'Instructor1','Instructor1','instructor1@email.com','123-123-1234','instructor1','instructor1','Instructor'),
  (UUID(),'Instructor1','Instructor1','instructor1@email.com','123-123-1234','instructor1','instructor1','Instructor');

INSERT INTO Users (UserID, FirstName, LastName, Email, PhoneNumber, UserName, Password, Role) VALUES
  (UUID(),'Student1','Student1','instructor@email.com','123-123-1234','student1','student1','Student'),
  (UUID(),'Student2','Student2','instructor@email.com','123-123-1234','student2','student2','Student'),
  (UUID(),'Student3','Student3','instructor@email.com','123-123-1234','student3','student3','Student'),
  (UUID(),'Student4','Student4','instructor@email.com','123-123-1234','student4','student4','Student');


INSERT INTO Users (UserID, FirstName, LastName, Email, PhoneNumber, UserName, Password, Role) VALUES
  (UUID(),'TA1','TA1','ta@email.com','123-123-1234','ta1','ta1','TA'),
  (UUID(),'TA2','TA2','ta@email.com','123-123-1234','ta2','ta2','TA'),
  (UUID(),'TA3','TA3','ta@email.com','123-123-1234','ta3','ta3','TA'),
  (UUID(),'TA4','TA4','ta@email.com','123-123-1234','ta4','ta4','TA');



/*
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Hedley','Perez','arcu@mauris.org','496-638-9339',1,1,'Instructor'),(UUID(),'Baker','Lane','ligula@dolor.ca','783-601-6193',2,2,'Instructor'),(UUID(),'Rigel','Hensley','magna@mollisvitaeposuere.edu','314-671-3916',3,3,'Instructor'),(UUID(),'Garrett','Grimes','elementum.lorem.ut@maurisutmi.ca','168-517-4485',4,4,'Instructor'),(UUID(),'Myles','Pollard','nec.ligula.consectetuer@dictumeu.org','429-583-8802',5,5,'Instructor'),(UUID(),'Elvis','Wall','sociis.natoque@maurissagittis.co.uk','415-716-9086',6,6,'Instructor'),(UUID(),'Allen','Carver','ultricies.ligula.Nullam@ametconsectetuer.net','115-569-7607',7,7,'Instructor'),(UUID(),'Harlan','Kelley','est.mauris.rhoncus@Proinvel.ca','521-548-4530',8,8,'Instructor'),(UUID(),'Herman','Giles','eleifend.Cras.sed@nonhendrerit.net','571-206-9178',9,9,'Instructor'),(UUID(),'Harlan','Murphy','Sed.nec@Phasellus.net','339-482-3763',10,10,'Instructor');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Upton','Sellers','malesuada.vel@mollis.com','393-255-5652',11,11,'Instructor'),(UUID(),'Burton','Hawkins','Ut.nec.urna@aliquet.org','881-667-6906',12,12,'Instructor'),(UUID(),'Omar','Ayers','dapibus.rutrum.justo@Duis.com','983-462-6047',13,13,'Instructor'),(UUID(),'Hamish','Nichols','elementum@arcuac.org','334-978-7858',14,14,'Instructor'),(UUID(),'Ferris','Graham','vitae@ipsum.org','394-560-7402',15,15,'Instructor'),(UUID(),'Baxter','Jenkins','nunc.est@faucibuslectus.org','558-195-7208',16,16,'Instructor'),(UUID(),'Tanek','Garcia','commodo.hendrerit@at.edu','697-174-1413',17,17,'Instructor'),(UUID(),'Josiah','Myers','In.mi@egettincidunt.net','621-147-7771',18,18,'Instructor'),(UUID(),'Drew','Hatfield','lorem.semper.auctor@interdum.net','424-958-6343',19,19,'Instructor'),(UUID(),'Scott','Fuller','Cras@idsapien.org','358-268-8707',20,20,'Instructor');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Gage','Gentry','egestas.lacinia@risusDonecegestas.edu','656-877-6520',21,21,'Instructor'),(UUID(),'Gareth','Roach','sagittis.Duis@blanditcongue.ca','711-654-2744',22,22,'Instructor'),(UUID(),'Marvin','Snyder','eu.odio.Phasellus@est.net','483-238-9518',23,23,'Instructor'),(UUID(),'Price','Webb','enim@ipsumCurabiturconsequat.co.uk','826-865-3367',24,24,'Instructor'),(UUID(),'Trevor','Bowen','tincidunt.nunc.ac@euturpisNulla.edu','663-417-0874',25,25,'Instructor'),(UUID(),'Kareem','Stuart','arcu.et.pede@estmollisnon.ca','249-102-2628',26,26,'Instructor'),(UUID(),'Matthew','Peterson','tempus.scelerisque@Cumsociisnatoque.edu','776-229-9808',27,27,'Instructor'),(UUID(),'Mannix','Morales','libero@acorci.edu','948-957-1949',28,28,'Instructor'),(UUID(),'Wallace','Sloan','ac@netus.com','246-523-6417',29,29,'Instructor'),(UUID(),'Lucius','Simpson','vulputate@utodio.co.uk','290-872-9141',30,30,'Instructor');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Buckminster','Shepard','non@lectus.edu','469-774-2266',31,31,'Instructor'),(UUID(),'Philip','Stewart','libero.mauris@morbitristique.edu','871-112-9945',32,32,'Instructor'),(UUID(),'Daniel','Barr','ut.nulla@idmollis.net','458-827-3059',33,33,'Instructor'),(UUID(),'Cruz','Turner','diam@DonecnibhQuisque.net','319-608-8431',34,34,'Instructor'),(UUID(),'Neville','Roth','Fusce.mi.lorem@cursus.org','229-461-7783',35,35,'Instructor'),(UUID(),'Arsenio','May','Nulla@CuraeDonectincidunt.co.uk','614-224-7209',36,36,'Instructor'),(UUID(),'Zeus','Mccarthy','malesuada.vel.convallis@egetipsumDonec.edu','233-351-3809',37,37,'Instructor'),(UUID(),'Merritt','Ayers','velit.Aliquam.nisl@Sedauctorodio.edu','915-969-8741',38,38,'Instructor'),(UUID(),'Cameron','Cherry','elit.elit@atauctorullamcorper.org','293-503-5158',39,39,'Instructor'),(UUID(),'Nathaniel','Kane','euismod.enim.Etiam@euismodenimEtiam.ca','512-807-4851',40,40,'Instructor');

INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Isaiah','Snider','lacinia.orci.consectetuer@velitPellentesqueultricies.net','671-925-6199',1,1,'Student'),(UUID(),'Brenden','Welch','libero.Morbi.accumsan@turpis.co.uk','503-400-7115',2,2,'Student'),(UUID(),'Shad','Villarreal','cursus@nequeseddictum.org','134-522-6870',3,3,'Student'),(UUID(),'Ahmed','Kim','Morbi.accumsan.laoreet@sitametconsectetuer.edu','113-384-0788',4,4,'Student'),(UUID(),'Timothy','Rodriguez','ut.lacus.Nulla@metusurna.co.uk','206-436-8395',5,5,'Student'),(UUID(),'Kieran','Emerson','sodales.Mauris@elitelit.edu','504-833-7724',6,6,'Student'),(UUID(),'Zephania','Bridges','Praesent.luctus.Curabitur@quis.net','556-648-7769',7,7,'Student'),(UUID(),'Wyatt','Atkins','amet.consectetuer.adipiscing@quam.co.uk','642-742-9833',8,8,'Student'),(UUID(),'Neville','Mason','ipsum.primis.in@dictumultricies.edu','577-134-6643',9,9,'Student'),(UUID(),'Martin','Moses','malesuada.id.erat@infelis.net','106-510-3683',10,10,'Student');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Vaughan','Coleman','interdum.feugiat@Vestibulum.edu','906-598-8253',11,11,'Student'),(UUID(),'Christopher','Joyner','Cras@parturientmontesnascetur.co.uk','263-348-9202',12,12,'Student'),(UUID(),'Carl','Guthrie','Curabitur.sed@ornareelitelit.co.uk','619-728-1755',13,13,'Student'),(UUID(),'Micah','Medina','in@InloremDonec.co.uk','992-583-4802',14,14,'Student'),(UUID(),'Garrett','Yates','dapibus.ligula@diamProin.edu','224-445-2690',15,15,'Student'),(UUID(),'Channing','Stewart','Mauris.eu@interdum.co.uk','510-426-2657',16,16,'Student'),(UUID(),'Hoyt','Harrington','fermentum@Crassedleo.com','909-287-9997',17,17,'Student'),(UUID(),'David','Yang','molestie.sodales@cursusvestibulumMauris.co.uk','388-900-9437',18,18,'Student'),(UUID(),'Hilel','Clark','sodales.at.velit@utlacusNulla.co.uk','564-425-3282',19,19,'Student'),(UUID(),'Andrew','Grimes','Cras@nec.com','459-416-6172',20,20,'Student');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Christian','Ramsey','eu@lacinia.org','724-296-2121',21,21,'Student'),(UUID(),'Ezekiel','Fox','dui@eliterat.edu','889-434-0207',22,22,'Student'),(UUID(),'Orlando','Britt','sodales@liberoProinsed.com','279-617-0241',23,23,'Student'),(UUID(),'Kieran','Eaton','leo@neque.com','624-151-3879',24,24,'Student'),(UUID(),'Louis','Odonnell','a.malesuada@egestas.co.uk','886-416-7893',25,25,'Student'),(UUID(),'Quinlan','Mathis','mollis.Duis.sit@tinciduntorciquis.co.uk','877-726-6796',26,26,'Student'),(UUID(),'Lance','Chambers','mauris.erat@necluctus.org','151-853-4248',27,27,'Student'),(UUID(),'Wylie','Odonnell','Maecenas.libero.est@tinciduntdui.edu','134-677-6254',28,28,'Student'),(UUID(),'Gareth','Pena','fringilla.Donec@sem.co.uk','717-808-3068',29,29,'Student'),(UUID(),'Dylan','Middleton','velit@est.edu','992-356-6665',30,30,'Student');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Thaddeus','Mcmillan','nec@Donecnibhenim.co.uk','979-112-7424',31,31,'Student'),(UUID(),'Nissim','Massey','Cum.sociis.natoque@feugiatnon.net','411-520-8587',32,32,'Student'),(UUID(),'Edan','Foster','Integer.sem@risusaultricies.net','198-202-5335',33,33,'Student'),(UUID(),'Mannix','Carver','rutrum.eu.ultrices@turpisnon.com','308-379-2297',34,34,'Student'),(UUID(),'Curran','Blake','mauris.ut@ullamcorper.net','627-108-4351',35,35,'Student'),(UUID(),'Allen','Collier','dis.parturient.montes@necurnasuscipit.ca','918-235-2815',36,36,'Student'),(UUID(),'Kamal','Valentine','risus.varius@volutpatNulla.com','399-370-0012',37,37,'Student'),(UUID(),'Warren','Patterson','non.enim@musDonec.org','831-468-2757',38,38,'Student'),(UUID(),'Linus','Thornton','risus@velpede.ca','128-124-2217',39,39,'Student'),(UUID(),'Steel','Clayton','ac@scelerisque.ca','110-555-3206',40,40,'Student');
INSERT INTO Users (UserID,FirstName,LastName,Email,PhoneNumber,UserName,Password,Role) VALUES (UUID(),'Vance','Preston','lectus.pede.et@nuncullamcorpereu.org','770-419-8029',41,41,'Student'),(UUID(),'Marvin','Spencer','porttitor.tellus@dignissimpharetraNam.ca','600-426-3859',42,42,'Student'),(UUID(),'Marshall','Ramsey','eu.ligula@feugiatnecdiam.edu','543-117-7741',43,43,'Student'),(UUID(),'Addison','Madden','imperdiet.dictum@semmollisdui.org','375-841-9684',44,44,'Student'),(UUID(),'Lars','Pierce','ante.Nunc.mauris@congueInscelerisque.ca','824-572-6918',45,45,'Student'),(UUID(),'Zeph','Soto','scelerisque.lorem@DonecegestasAliquam.com','514-894-7818',46,46,'Student'),(UUID(),'Eagan','Wolf','eleifend.nunc@urnaUttincidunt.co.uk','663-753-4689',47,47,'Student'),(UUID(),'Forrest','Gordon','malesuada@nec.ca','236-906-9221',48,48,'Student'),(UUID(),'George','Klein','tincidunt.vehicula@feugiatplacerat.com','995-399-5037',49,49,'Student'),(UUID(),'Chester','Romero','dolor.Nulla@dolor.ca','840-697-2644',50,50,'Student');
*/


/** ff42ea38-fefc-11e6-b2d4-002590d0b932 */
/** ff452227-fefc-11e6-b2d4-002590d0b932 */
/** ff47f25e-fefc-11e6-b2d4-002590d0b932 */
/** ff4a455a-fefc-11e6-b2d4-002590d0b932 */




SELECT `RunningAssessmentsReport`.`AssessmentID` AS `AssessmentID`, COUNT(*) AS `Count` FROM `RunningAssessmentsReport` WHERE `AnsweringBy` = ? GROUP BY `AssessmentID`