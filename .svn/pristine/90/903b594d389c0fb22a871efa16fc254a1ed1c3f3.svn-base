import React from 'react';
import CourseContentMainInformation from './CourseContentMainInformation.jsx';
import Popup from 'components/Tools/Popup.jsx';
import CELOButton from 'components/Tools/CELOButton.jsx';
import CourseContentCreation from '../CourseContentCreation/CourseContentCreation.jsx';
import {DropdownButton,MenuItem} from 'react-bootstrap';
import CourseContentAPI from "../../libaries/APIs/CourseContentAPI.jsx";
import $ from 'jquery';
class CourseContentCreationMenu extends React.Component
{
    state={
        Valid:false,
        Opened:false,
        Data:{},
        SelectedType:Object.keys(CourseContentMainInformation.Items)[0]
    };
    constructor(props){
        super(props);

        this.open=this.open.bind(this);
        this.close=this.close.bind(this);
        this.updateData=this.updateData.bind(this);
        this.validInputOrNot=this.validInputOrNot.bind(this);
        this.addEssentialItems=this.addEssentialItems.bind(this);
        this.create=this.create.bind(this);

        this.apiHook=CourseContentAPI.instance.hook();
    }
    componentDidMount(){
        this.apiHook.open();
        this.apiHook.on("create-course-content",function(data){
            this.close();
        }.bind(this));
    }
    componentWillMount(){
        this.addEssentialItems();
    }
    componentWillUnmount(){
        this.apiHook.close();
    }
    componentWillReceiveProps(props){
        this.addEssentialItems();
    }
    validInputOrNot(valid){
        this.setState({
            Valid:valid
        });
    }
    addEssentialItems(){
        this.setState({
            Data:$.extend(this.state.Data,{id:this.props.CourseContentID,
                                            Type:this.state.SelectedType})
        });
    }
    updateData(data){
        this.setState({
           Data:data
        });
    }
    open(){
        this.setState({
            Opened:true
        });
    }
    close(){
        this.setState({
            Opened:false
        });
    }
    setType(type){
        this.setState({
            SelectedType:type,
            Opened:true,
            Data:$.extend(this.state.Data,{id:this.props.CourseContentID,
                Type:type})

        });

    }
    create(){
        this.apiHook.getListener().initiate("create-course-content",this.state.Data);

    }
    render(){
        return <div className="create-course-content-menu">
                    <DropdownButton id="creationTypeDropdown"  title={"New"} >
                        {CourseContentMainInformation.MenuItems(this.props).map(function(item,index ){
                            return <MenuItem onClick={()=>{this.setType(item.Key)}} eventKey={index} key={index}>{item.IconImage}{item.Text}</MenuItem>
                        }.bind(this))}
                        <MenuItem eventKey="1">Action</MenuItem>
                    </DropdownButton>
                    <Popup Show={this.state.Opened} okText={"Create"} OkEnabled={this.state.Valid} onClosed={this.close} onSubmit={this.create} Title={"Create Course Content"}>
                        <div>

                            <CourseContentCreation ContentType={this.state.SelectedType} {...this.props} CurrentData={this.state.Data} onDataChanged={this.updateData} onValidityChanged={this.validInputOrNot}/>
                        </div>
                    </Popup>
               </div>
    }
}


export default CourseContentCreationMenu
