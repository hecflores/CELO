import React from 'react';
import DataInput from "../Containers/DataInput.jsx";
import CoursesList from "./CoursesList.jsx";
import CoursesAPI from "../../libaries/APIs/CoursesAPI.jsx";
import APIComponent from "../Containers/APIComponent.jsx";
import {Modal} from 'react-bootstrap';
import UserRenderChooser from "../Users/UserRenderChooser.jsx";
class MainCoursesPage extends UserRenderChooser{
    constructor(props) {
        super(props);
        this.state={
            CreatingCourse:false
        };
        this.CreateCourse=function(){
            this.setState({
                CreatingCourse:true
            });
        }.bind(this);

        this.CreateCourseFinished=function(){
            this.setState({
                CreatingCourse:false
            });
        }.bind(this);
    }
    renderForStudent(){
        return (
            <div className="col-lg-6">

                <h2>Courses </h2>
                <CoursesList Displayer={CoursesList.Displays.ver1_replica}/>
                <APIComponent Message="Create New Courses..." APIListener={CoursesAPI.instance} Event={"create-new-course"} onSubmit={this.CreateCourseFinished} initialInput={{}} initialOutput={{}} >
                    {function(data,change,getTrigger,putTrigger,isLoading ) {
                        return (<div>
                            <Modal
                                show={this.state.CreatingCourse}
                                onHide={this.CreateCourseFinished}
                                container={this}
                                aria-labelledby="createCoursePopup"
                            >
                                <Modal.Header closeButton>
                                    <Modal.Title id="createCoursePopup">Create New Course</Modal.Title>
                                </Modal.Header>
                                <Modal.Body>
                                    <div className="new-course-info">
                                        <DataInput Key={"CourseCategory"} Name={"Course Category"} onChanged={[change]}/>
                                        <DataInput Key={"CourseID"} Name={"Course ID"} onChanged={[change]}/>
                                        <DataInput Key={"CourseName"} Name={"Course Name"} onChanged={[change]}/>
                                        <DataInput Key={"Description"} Name={"Course Description"} onChanged={[change]}/>
                                    </div>
                                </Modal.Body>
                                <Modal.Footer>
                                    {isLoading?(
                                            <div>
                                                <div style={{"textAlign":"right"}}>Creating...</div>
                                            </div>
                                        ):(<div>
                                                <div onClick={this.CreateCourseFinished} className="btn btn-danger">Cancel</div>
                                                <div onClick={getTrigger} className="btn btn-success">Create</div>
                                            </div>
                                        )}
                                </Modal.Footer>
                            </Modal>
                        </div>)
                    }.bind(this)}
                </APIComponent>
            </div>
        );
    }
    renderForStaff(){
        return (
            <div className="col-lg-6">

                <h2>Courses <div onClick={this.CreateCourse} className="btn btn-inverse btn-success">Create</div></h2>
                <CoursesList Displayer={CoursesList.Displays.ver1_replica}/>
                <APIComponent Message="Create New Courses..." APIListener={CoursesAPI.instance} Event={"create-new-course"} onSubmit={this.CreateCourseFinished} initialInput={{}} initialOutput={{}} >
                    {function(data,change,getTrigger,putTrigger,isLoading ) {
                        return (<div>
                            <Modal
                                show={this.state.CreatingCourse}
                                onHide={this.CreateCourseFinished}
                                container={this}
                                aria-labelledby="createCoursePopup"
                            >
                                <Modal.Header closeButton>
                                    <Modal.Title id="createCoursePopup">Create New Course</Modal.Title>
                                </Modal.Header>
                                <Modal.Body>
                                    <div className="new-course-info">
                                        <DataInput Key={"CourseCategory"} Name={"Course Category"} onChanged={[change]}/>
                                        <DataInput Key={"CourseID"} Name={"Course ID"} onChanged={[change]}/>
                                        <DataInput Key={"CourseName"} Name={"Course Name"} onChanged={[change]}/>
                                        <DataInput Key={"Description"} Name={"Course Description"} onChanged={[change]}/>
                                    </div>
                                </Modal.Body>
                                <Modal.Footer>
                                    {isLoading?(
                                            <div>
                                                <div style={{"textAlign":"right"}}>Creating...</div>
                                            </div>
                                        ):(<div>
                                                <div onClick={this.CreateCourseFinished} className="btn btn-danger">Cancel</div>
                                                <div onClick={getTrigger} className="btn btn-success">Create</div>
                                            </div>
                                        )}
                                </Modal.Footer>
                            </Modal>
                        </div>)
                    }.bind(this)}
                </APIComponent>
            </div>
        );
    }
}

MainCoursesPage.propTypes={
};

export default MainCoursesPage;
