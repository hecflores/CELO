<?php
/**
 * Zend Framework (http://framework.zend.com/)
 *
 * @link      http://github.com/zendframework/ZendSkeletonApplication for the canonical source repository
 * @copyright Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)
 * @license   http://framework.zend.com/license/new-bsd New BSD License
 */

namespace Application;

use Application\Model\CourseStatusTable;
use Application\Model\CourseTable;
use Application\Model\Invitation;
use Application\Model\InvitationReasons;
use Application\Model\InvitationReasonsTable;
use Application\Model\InvitationTable;
use Application\Model\QuestionsTable;
use Application\Model\QuestionType;
use Application\Model\QuestionTypesTable;
use Application\Model\SectionTable;
use Application\Model\User;
use Application\Model\UserSessionTable;
use Application\Model\UserTable;
use Application\Service\LoginService;
use Zend\Log\Writer\Mail;
use Zend\Mail\Message;
use Zend\Mvc\MvcEvent;

class Info{

    public static function getBodyJSON(){
        $content=file_get_contents('php://input');

        $json=json_decode($content,true);
        if(!isset($json)){
            echo "Its Null";
            return null;
        }
        return $json;
    }
    static protected $event;
    static protected $Singletons=array();
    /**
     * @return MvcEvent
     */
    public static function  getEvent(){
        return self::$event;
    }
    public static function setEvent(MvcEvent $e)
    {

        self::$event=$e;
    }
    public static function Url(){

        $url=$_SERVER['REQUEST_URI'];
        $url=urldecode($url);
        //echo $url;

        $re = "/(\\?|\\&)([^\\=]*)\\=([^\\&]*)/";
        $str = "hector.com/hector?hector=hector?red=blue?red=blue";

        preg_match_all($re, $url, $matches);



        $re = "/(\\/[^\\?]*)/";
        $str = "hector.com/hector?hector=hector&red=blue&red=green";


        preg_match($re, $url, $matches2);

        $parameters=array();
        for($i=0;$i<count($matches[2]);$i++){
            $parameters[]=array("name" => $matches[2][$i],
                "value" => $matches[3][$i]);
        }

        $url=$matches2[1];

        //$textInformation=include "../configs/Text.php";
        return $url;
    }

    public static function RootFolder(){
        return __DIR__."/../../";
    }
    /**
     * @return User
     */
    public static function getCurrentUser()
    {
        return self::getServiceManager()->get("LoginService")->GetCurrentUser();
    }
    public static function setServiceManager($sm){

            self::$Singletons["ServiceManager"]=$sm;
    }
    /**
     * @return \Zend\ServiceManager\ServiceLocatorInterface
     */
    public static function getServiceManager(){



        if(!isset(self::$Singletons["ServiceManager"])){
            self::$Singletons["ServiceManager"]=self::getEvent()->getApplication()->getServiceManager();
        }
        return self::$Singletons["ServiceManager"];
    }

    /**
     * @param String $name
     * @return mixed
     */
    public static function get($name){
        if(!isset(self::$Singletons[$name])){
            self::$Singletons[$name]=self::getServiceManager()->get($name);
        }
        return self::$Singletons[$name];
    }

    /**
     * @return LoginService
     */
    public static function LoginService(){
        return self::get("LoginService");
    }

    /**
     * @return UserSessionTable
     */
    public static function UserSessionTable(){
        return self::get("Application\Model\UserSessionTable");
    }

    /**
     * @return UserTable
     */
    public static function UserTable(){
        return self::get("UsersTable");
    }
    /**
     * @return CourseTable
     */
    public static function CourseTable(){
        return self::get("CoursesTable");
    }
    /**
     * @return CourseStatusTable
     */
    public static function CourseStatusTable(){
        return self::get("CourseStatusTable");
    }
    /**
     * @return InvitationTable
     */
    public static function InvitationTable(){
        return self::get("InvitationTable");
    }
    /**
     * @return InvitationReasonsTable
     */
    public static function InvitationReasonsTable(){
        return self::get("InvitationReasonsTable");
    }

    /**
     * @return SectionTable
     */
    public static function SectionTable(){
        return self::get("SectionTable");
    }

    /**
     * @return QuestionTypesTable
     */
    public static function QuestionTypesTable(){
        return self::get("QuestionTypeTable");
    }

    /**
     * @return QuestionsTable
     */
    public static function QuestionsTable(){
        return self::get("QuestionsTable");
    }

}