import React from 'react';

class Input extends React.Component{

    static propTypes={
        Id:React.PropTypes.string.isRequired,
        Title:React.PropTypes.string,
        Placeholder:React.PropTypes.string,
        value:React.PropTypes.string,
        onChange:React.PropTypes.func,
        onBlur:React.PropTypes.func,
        containerCss:React.PropTypes.string,
        CustomElement:React.PropTypes.element
    };
    static defaultProps={
        Title:"Unkown",
        Placeholder:"",
        onBlur:function(){},
        onChange:function(){},
        CustomElement:<input type="text"/>

    };

    constructor(props){
        super(props);

        this.onBlur=this.onBlur.bind(this);
        this.onChange=this.onChange.bind(this);
    }
    onChange(e){
        let splited=this.props.Id.split(".");
        let str="";
        splited=[...splited];
        let lastRoot="obj";
        splited.forEach(function(key,index){
            if(index==splited.length-1){
                str+=lastRoot+"."+key+"=e.target.value; ";
                return;
            }

            str+=lastRoot+"."+key+"={}; ";
            lastRoot=lastRoot+"."+key;
        });

        let obj={};
        eval(str);


        this.props.onChange(obj);
    }
    onBlur(e){
        let splited=this.props.Id.split(".");
        let str="";
        splited=[...splited];
        let lastRoot="obj";
        splited.forEach(function(key,index){
            if(index==splited.length-1){
                str+=lastRoot+"."+key+"=e.target.value; ";
                return;
            }

            str+=lastRoot+"."+key+"={}; ";
            lastRoot=lastRoot+"."+key;
        });

        let obj={};
        eval(str);


        this.props.onBlur(obj);
    }

    render(){
        return <div className={"form-group " + this.props.containerCss}>
            <label htmlFor={this.props.Id+"_input"}>{this.props.Title}</label>
            {React.cloneElement(this.props.CustomElement,{className:("form-control "+(this.props.className || "")), onChange:this.onChange, onBlur:this.onBlur, value:this.props.value})}
            {this.props.children}
        </div>
    }
}
export default Input