<?php
/**
 * Zend Framework (http://framework.zend.com/)
 *
 * @link      http://github.com/zendframework/ZendSkeletonApplication for the canonical source repository
 * @copyright Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)
 * @license   http://framework.zend.com/license/new-bsd New BSD License
 */

namespace Instructor\Controller;

use Application\Info;
use Application\Roles;
use Zend\Mvc\Application;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;
use Zend\Mvc\MvcEvent;
use Zend\View\View;

class IndexController extends AbstractActionController
{


    public function onDispatch(MvcEvent $e)
    {

        $navigation=new ViewModel();
        $navigation->setTemplate("instructor/layout/navigation");

        $banner=new ViewModel();
        $banner->setTemplate("instructor/layout/banner");

        $e->getViewModel()->addChild($navigation,"navigation");
        $e->getViewModel()->addChild($banner,"banner");
        //e->getViewModel()->setTemplate("visitors/layout");
        $parent=parent::onDispatch($e); // TODO: Change the autogenerated stub


        /*******************************************************************/




        /*******************************************************************/
        return $parent;
    }

    public function invitationAction()
    {
        $invitationID=$this->params()->fromRoute("invitationID");
        $invitation=Info::InvitationTable()->getFromById($invitationID);

        if($invitation==null){
            $view =new ViewModel();
            $view->setTemplate("instructor/register/error");
            $view->setVariable("invitationID",$invitationID);
            $view->setVariable("error","Unable to find Invitation");
            return $view;
        }

        if($invitation->getReasonID()=='Ins_Reg'){

            $this->redirect()->toRoute("instructor/invitation/register",array("invitationID" => $invitationID));

            return;
        }





        $view =new ViewModel();
        $view->setTemplate("instructor/register/error");
        $view->setVariable("invitationID",$invitationID);
        $view->setVariable("error","Unkown Invitation Type");

        return $view;

    }
    public function registerAction()
    {
        $invitationID=$this->params()->fromRoute("invitationID");
        $invitation=Info::InvitationTable()->getFromById($invitationID);

        if($invitation==null){
            $view =new ViewModel();
            $view->setTemplate("instructor/register/error");
            $view->setVariable("invitationID",$invitationID);
            $view->setVariable("error","Unable to find Invitation");
            return $view;
        }

        if ($this->getRequest()->isPost())
        {

            $_COOKIE["SessionID"]=$invitation->getInviting()->getUserID();
            $info=$this->params()->fromPost();

            Info::UserTable()->updateUserProfile($info);
            Info::InvitationTable()->acceptInvitation($invitationID);
            Info::LoginService()->SignIn($info["UserName"],$info["Password"],"Instructor");

            $this->redirect()->toRoute("instructor");
            return new ViewModel();
        }


        $view =new ViewModel();
        $view->setTemplate("instructor/register/register");
        $view->setVariable("invitationID",$invitationID);


        return $view;

    }
    public function loginAction()
    {
        if(Info::LoginService()->IsAlreadySignedIn(Roles::GetRole())){
            $this->redirect()->toRoute("instructor");
            return new ViewModel();
        }

        if (!$this->getRequest()->isPost())
        {
            $view=new ViewModel();
            $view->setTemplate("instructor/login");
            return $view;
        }

        /*******************************************************************/
        $UserName=$this->params()->fromPost("userName");
        $Password=$this->params()->fromPost("password");

        if(($userSession=Info::LoginService()->SignIn($UserName,$Password,"Instructor"))!=null){
            $this->redirect()->toRoute("instructor");
            return;
        }

        $view=new ViewModel();
        $view->setVariable("error","Username and Password was not found");
        $view->setTemplate("instructor/login");
        return $view;



    }


}
