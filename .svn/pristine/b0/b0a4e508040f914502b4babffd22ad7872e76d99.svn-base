<?php
/**
 * Created by PhpStorm.
 * User: Hector
 * Date: 3/9/2017
 * Time: 3:31 AM
 */

namespace Application\Model;


use Application\Info;
use Application\QuestionManager;
use Zend\Db\Sql\Select;
use Zend\Db\Sql\Sql;
use Zend\Db\TableGateway\TableGateway;

class AssessmentTable
{
    protected $tableGateway;

    public function __construct(TableGateway $tableGateway)
    {
        $this->tableGateway = $tableGateway;
    }


    /** Creates a new Assessment with that corresponds to a course gradable content
     * @param $data
     * @param $AssociatedCourseContentID
     * @return int
     */
    public function CreateNewAssessment($data,$AssociatedCourseContentID){
        $data["AssociatedCourseContentID"]=$AssociatedCourseContentID;
        $data["CreatedBy"]=Info::getCurrentUser()->getUserID();

        $this->tableGateway->insert($data);
        $id=$this->tableGateway->getLastInsertValue();
        return $id;
    }

    /**
     * @param int|string|Assessment $Assessment_or_ID
     * @param int|string|QuestionManager|Question $Question_or_ID
     * @param int|string $Weight
     * @return int
     */
    public function AddQuestion($Assessment_or_ID, $Question_or_ID,$Weight){

        /********************************************************************/
        /* Fixing Variables                                                 */
        /********************************************************************/
        if($Assessment_or_ID instanceof Assessment){
            $Assessment_or_ID=$Assessment_or_ID->getAssessmentID();
        }

        /********************************************************************/
        if($Question_or_ID instanceof Question){
            $Question_or_ID=$Question_or_ID->getQuestionID();
        }
        else if($Question_or_ID instanceof QuestionManager){
            $Question_or_ID=$Question_or_ID->getQuestion()->getQuestionID();
        }

        $data=array(
            "AssessmentID"=>$Assessment_or_ID,
            "QuestionID"=>$Question_or_ID,
            "Weight"=>$Weight,
            "AddedBy"=>Info::getCurrentUser()->getUserID());


        $id=Info::PerformInsert("AssessmentQuestions",$data);
        return $id;
    }

    /**
     * @param int|string|Assessment $Assessment_or_ID
     * @return string
     */
    public function StartAssessment($Assessment_or_ID){

        /********************************************************************/
        /* Fixing Variables                                                 */
        /********************************************************************/
        if($Assessment_or_ID instanceof Assessment){
            $Assessment_or_ID=$Assessment_or_ID->getAssessmentID();
        }

        /********************************************************************/
        $data=array(
            "AssessmentID"=>$Assessment_or_ID,
            "StartTime"=>"CURRENT_TIMESTAMP",
            "AnsweringBy"=>Info::getCurrentUser()->getUserID(),
            "SessionID"=>uniqid());

        /********************************************************************/
        $id=Info::PerformInsert("RunningAssessments",$data);

        /********************************************************************/
        return $data["SessionID"];
    }


    /**
     * @param int|string $SessionID
     * @return string
     */
    public function getAssessmentSessionQuestions($SessionID){
        $sql=Info::SQL();
        $sql->select("RunningAssessments AS RA")
            ->columns(array('AsQ.QuestionID','AsQ.Weight',"AnQ.ChosenAnswer","(AnQ.AnsweredID IS NOT NULL) AS Answered"))
            ->join("AssessmentQuestions AS RsQ","RsQ.AssessmentID=RA.AssessmentID",Select::SQL_STAR)
            ->join("AnsweredQuestions AS AnQ","AnQ.SessionID=RA.SessionID",Select::SQL_STAR,Select::JOIN_LEFT)
            ->where(array(
                "RA.SessionID"=>$SessionID
            ));
    }
}