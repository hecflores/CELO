<?php
namespace Files\Controller;

use Application\Info;
use Application\Roles;
use Files\Service\CourseContentItemManager;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;

/**
 * Created by PhpStorm.
 * User: Hector
 * Date: 3/2/2017
 * Time: 3:12 AM
 */
class IndexController extends AbstractActionController
{
    /***********************************************************************/
    public function indexAction()
    {
        $this->redirect()->toRoute("course-content/view",array("contentID"=>$this->params()->fromRoute('contentID')));
        return;
    }

    /***********************************************************************/
    public function viewAction()
    {
        $contentID=$this->params()->fromRoute("contentID");

        $courseContentManager=Info::CourseContentTable()->getByID($contentID);
        $view=new ViewModel();
        $view->setVariable("contentItem",$courseContentManager);
        $view->setTemplate("files/display");
        return $view;
    }

    /***********************************************************************/
    public function runAction()
    {
        $contentID=$this->params()->fromRoute("contentID");

        $courseContentManager=Info::CourseContentTable()->getByID($contentID);
        $view=new ViewModel();
        $view->setVariable("contentItem",$courseContentManager);
        $view->setTemplate("files/run");
        $view->setTerminal(true);
        return $view;
    }
    public function FindAvailableFileName($extension){
        $folder="data/Files";
        $files = glob($folder . "*.$extension");
        $index=count($files);
        while(file_exists("$folder/File$index.$extension")){
            $index++;
        }
        return "$folder/File$index.$extension";
    }
    public function FindFiles_Copy_Update($data){

        if(isset($data["name"]) &&
            isset($data["type"]) &&
            isset($data["tmp_name"]) &&
            isset($data["error"]) &&
            isset($data["size"]))
        {
            $fileInfo=pathinfo($data["name"]);
            $fileCopingTo=$this->FindAvailableFileName($fileInfo["extension"]);
            copy($data["tmp_name"],$fileCopingTo);
            return array("Path"=>$fileCopingTo,"Type"=>$data["type"]);

        }

        $newData=array();
        foreach($data as $key => $value){
            if(!is_array($value)){
                $newData[$key]=$value;
                continue;
            }
            $newData[$key]=$this->FindFiles_Copy_Update($value);
        }
        return $newData;
    }
    public function ConvertJsonToStringJson($data){

        $newData=array();
        foreach($data as $key => $value){

            /***************************************************************/
            if(!is_array($value)){
                $newData[$key]=$value;
                continue;
            }

            /***************************************************************/
            if($key=='Json'){
                foreach($data["Json"] as $key2 => $value2){
                    $newData[$key2]=json_encode($value2);
                }
                continue;
            }
            $newData[$key]=$this->ConvertJsonToStringJson($value);
        }
        return $newData;
    }
    /***********************************************************************/
    public function createAction()
    {
        if($this->getRequest()->isPost())
        {
            //$post=$this->params()->fromPost();
            //$redirect=$post["Redirect"];
            echo "<h1>Zend</h1>";
            echo "<h2>Files</h2>";
            $data=$_POST;
            $files=$this->getRequest()->getFiles()->toArray();
            var_dump($files);
            $data=array_replace_recursive($data,$files);

            $data=$this->FindFiles_Copy_Update($data);
            $data=$this->ConvertJsonToStringJson($data);


            Info::CourseContentTable()->Insert($data["Content"]);
            $this->redirect()->toUrl($data["Redirect"]);
            return;

        }
        $this->redirect()->toUrl(Roles::GetRoleUrl("")); // TODO Change to course home or something



    }

}