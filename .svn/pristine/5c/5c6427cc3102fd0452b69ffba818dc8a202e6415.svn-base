import React from 'react';
import CELOButton from '../Tools/CELOButton.jsx';
import SectionHeader from '../Section/SectionHeader.jsx';
import APIComponent from '../Containers/APIComponent.jsx';
import DataInput from '../Containers/DataInput.jsx';
import CourseContent from '../CourseContent/CourseContent.jsx';
import SectionsAPI from "../../libaries/APIs/SectionsAPI.jsx";
import CourseTitle from '../Courses/CourseTitle.jsx';
import {SectionLoader, SectionLoaderIndicator} from '../Section/SectionLoader.jsx';
import {ButtonGroup,Button} from 'react-bootstrap';
import Loader from '../Containers/Loader.jsx';
import Layout from '../Template/Layout.jsx';
import UserRenderChooser from '../Users/UserRenderChooser.jsx';
import StaffLayoutTemplate from '../LayoutTemplates/StaffLayoutTemplate.jsx';
import SimpleContainer from '../Tools/SimpleContainer.jsx';
import CourseContentViabilityManager from '../CourseContent/CourseContentViabilityManager.jsx';
import CourseContentTabs from '../CourseContent/CourseContentTabs.jsx';
import SectionLink from '../Section/SectionLink.jsx';
import SectionAPI from '../../libaries/APIs/SectionsAPI.jsx';
class SectionUsers extends UserRenderChooser{
    static propTypes={
        SectionInfo:React.PropTypes.object,
        SectionID:React.PropTypes.number,
    };

    constructor(props)
    {
        super(props);
        this.uhidInputChanged=this.uhidInputChanged.bind(this);
        this.addUHID=this.addUHID.bind(this);
    }

    uhidInputChanged(e){
        this.setState({
            UHIDInput:e.target.value
        });
    }
    addUHID(e){
        SectionAPI.instance.initiate("add-uhids-in-section",
            {SectionID:this.props.SectionID,UHID:this.state.UHIDInput})
    }
    renderForInstructor()
    {
        return <div className="section-users">
                    {/*<div className="form-group">*/}
                        {/*<label>Search</label>*/}
                        {/*<input type="string" className="form-control" placeholder="Search..."/>*/}
                    {/*</div>*/}
                    <table className="table">
                        <thead>
                            <tr>
                                <th>Active</th>
                                <th>UHID</th>
                                <th>Name</th>
                                <th>Role</th>
                            </tr>
                        </thead>
                        <tbody>
                        {this.props.SectionInfo.Users.map(function(user,index){
                            return <tr key={index} className="user-tuple-in-section">
                                        <td>{user.isActive?<span className="true-value"/>:<span className="false-value"/>}</td>
                                        <td>{user.UHID}</td>
                                        <td>{user.LastName+", "+user.FirstName}</td>
                                        <td>{user.Role}</td>
                                   </tr>
                        }.bind(this))}
                        </tbody>
                    </table>
                    <div className="form-group">
                        <label>Add UHID</label>
                        <input onChange={this.uhidInputChanged} className="form-control" placeholder="UHID..."/>
                    </div>
            <CELOButton Enabled={true} onClick={this.addUHID} TooltipText={"Click to add UHID"}>Add</CELOButton>
               </div>


    }
    renderForStudent(){
        return <div></div>;
    }


}



export default SectionUsers;