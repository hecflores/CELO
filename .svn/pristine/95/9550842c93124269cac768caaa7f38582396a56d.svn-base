/**
 * Created by Hector on 3/11/2017.
 */

function Api(){}
function Popups(){}


/****************************************************************************/
/* Tags                                                                     */
/****************************************************************************/
Api.Tag={
    get:function(id,category,callback)
    {
        $.get("/api/tags",{'_':$.now(),category:category,objectid:id},function(data){
            callback?callback(data):true;
        });
    },
    search:function(id,category,callback)
    {
        $.get("/api/tags",{'_':$.now(),category:category,search:searchText},function(data){
            callback?callback(data):true;
        });
    },
    add:function(id,category,callback)
    {
        $.post("/api/tags",{TagID:tag,Category:category,ObjectID:id,Rank:rank},function(data){
            callback?callback(data):true;
        });
    }
};

/****************************************************************************/
/* Questions                                                                */
/****************************************************************************/
Api.Questions= {
    get:function(callback)
    {
        $.get("/api/questions",{'_':$.now()},function(data){
            callback?callback(data):true;
        });
    }
};
Popups.Questions=function(){
    return new QuestionsPopup();
};

/** @constructor */
function QuestionsPopup(){
    this._multiselect=false;
    this._callback=function(){alert("Question Popup was not properly setup")};
    this._searchable=false; //todo Need to be able to do searchable
    this._sortable=false; //todo Need to be able to do sortable
    this._isOpen=false;
}
$.extend(QuestionsPopup.prototype,{

    /***********************************************************************/
    /**
     * @this QuestionsPopup
     * @param {boolean=} $_multiselect Some value (optional).
     * @return boolean|QuestionsPopup
     */
    MultiSelect:function($_multiselect)
    {
        switch(arguments.length){
            case 0:
                return this._multiselect;
            case 1:
                this._multiselect=$_multiselect;
                return this;
                break;
            default:
                console.error("Incorrect number of arguments: QuestionsPopup.multiselect");
        }
    },
    /**
     * @this QuestionsPopup
     * @param {boolean=} $_callback Some value (optional).
     * @return function|QuestionsPopup
     */
    Callback:function($_callback)
    {
        switch(arguments.length){
            case 0:
                return this._callback;
            case 1:
                this._callback=$_callback;
                return this;
                break;
            default:
                console.error("Incorrect number of arguments: QuestionsPopup.Callback");
        }
    },
    /**
     * @this QuestionsPopup
     * @param {boolean=} $_searchable Some value (optional).
     * @return boolean|QuestionsPopup
     */
    Searchable:function($_searchable)
    {
        switch(arguments.length){
            case 0:
                return this._searchable;
            case 1:
                this._searchable=$_searchable;
                return this;
                break;
            default:
                console.error("Incorrect number of arguments: QuestionsPopup.Searchable");
        }
    },

    /**
     * @this QuestionsPopup
     * @return boolean
     */
    IsOpen:function()
    {
        return this._isOpen;
    },

    /**
     * @this QuestionsPopup
     */
    Open:function()
    {
        if(this.IsOpen()){
            return;
        }
        var selected={};
        var $this=this;
        /*******************************************************************/
        var element=$("<div>");
        element.html("<table class='table table-hover'>"+
                     "   <thead>"+
                     "      <tr>"+
                     "         <th>Question</th>"+
                     "         <th>Question Type</th>"+
                     "         <th>Tags</th>"+
                     "      </tr>"+
                     "   </thead>"+
                     "   <tbody>"+
                     "     <span class='spinner'></span>"+
                     "   </tbody>"+
                     "</table>");

        /*******************************************************************/
        element.on("click",".questionItem",function(){
            var clickedQuestion=$(this).data("Question");
            if($(this).attr("selected")){
                $(this).removeAttr("selected");
                $(this).css({"background":"","color":""});
                delete selected[clickedQuestion["QuestionID"]];

                return;
            }
            $(this).attr("selected",true);
            $(this).css({"background":"black","color":"white"});
            selected[clickedQuestion["QuestionID"]]=clickedQuestion;

        });
        /*******************************************************************/
        MessageBox.ShowPopup({
            title:this.MultiSelect()?"Pick You Question":"Pick Your Questions",
            content:element,
            options:[
                {
                    type:'danger',
                    causeClose:true,
                    content:'Cancel'
                },
                {
                    type:'success',
                    causeClose:true,
                    content:'Ok',
                    callback:function(modal){
                        modal.close();
                        data=Object.values(selected);
                        if($this.MultiSelect()){
                            $this.Callback()(data);
                        }
                        else{
                            $this.Callback()(data[0]);
                        }
                    }
                }
            ]
        });

        /*******************************************************************/
        var tableBody=element.find("tbody");
        Api.Questions.get(function(data){

            tableBody.empty();
            data.data.forEach(function(item){
                var row=$("<tr class='questionItem'>"+
                    "   <td>"+(item["Question"].length>40?item["Question"].substring(0,40):item["Question"])+"...</td>"+
                    "   <td>"+item["QuestionType"]+"</td>"+
                    "   <td><span class='tag-action' tag-category='Question' tag-refid='"+item["QuestionID"]+"'</td>"+
                    "</tr>");



                row.data("Question",item);
                row.appendTo(tableBody);
            });

            tableBody.trigger("created");
        });
    }

});

