<?php
/**
 * Created by PhpStorm.
 * User: Hector
 * Date: 2/23/2017
 * Time: 9:50 AM
 */

namespace Administrator\Controller;


use Application\EmailService;
use Application\Info;
use Application\Model\Course;
use Application\Model\Section;
use Application\Roles;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\Mvc\MvcEvent;
use Zend\Permissions\Rbac\Role;
use Zend\View\Model\ViewModel;

class UserController  extends AbstractActionController
{
    /** @var Course */
    protected $course;

    /** @var Section */
    protected $section;

    public function onDispatch(MvcEvent $e)
    {

        $navigation=new ViewModel();
        $navigation->setTemplate("layout/staff/navigation");
        $e->getViewModel()->addChild($navigation,"navigation");


        $parent=parent::onDispatch($e); // TODO: Change the autogenerated stub

        /*******************************************************************/
        /* Basic Links
        /*******************************************************************/
        Info::Helper()->getMenuGroups()->subMenu->link("Courses","/admin/courses");
        //Info::Helper()->getMenuGroups()->subMenu->link("Invitations","/admin/invitations");
        Info::Helper()->getMenuGroups()->subMenu->link("Questions","/questions");


        /*******************************************************************/
        return $parent;
    }

    /**
     * @return Course|array|\ArrayObject|null
     */
    public function getCourse()
    {
        if(isset($this->course)){
            return $this->course;
        }
        $CourseCategory=$this->params()->fromRoute("CourseCategory");
        $courseID=$this->params()->fromRoute("courseID");

        if(!isset($CourseCategory)){
            return;
        }

        $course=Info::CourseTable()->find($CourseCategory,$courseID);
        $this->course=$course;
        return $course;
    }

    /**
     * @return \Application\Model\Section|null
     */
    public function getSection()
    {
        if(isset($this->section)){
            return $this->section;
        }

        $sectionID=$this->params()->fromRoute("sectionID");

        if(!isset($sectionID)){
            return;
        }

        $section=Info::SectionTable()->find($this->getCourse(),$sectionID);
        $this->section=$section;
        return $section;
    }

    /**
     * @param $view ViewModel
     */
    public function setupVariables($view)
    {
        $course=$this->getCourse();
        $section=$this->getSection();

        /*******************************************************************/
        if(!isset($course)){
            return;
        }

        $view->setVariable("course",$course);

        /*******************************************************************/
        if(!isset($section)){
            return;
        }

        $view->setVariable("section",$section);

    }
    /***********************************************************************/
    /***********************************************************************/
    /***********************************************************************/
    public function indexAction()
    {
        $view=new ViewModel();
        $view->setTemplate('administrator/home');


        return $view;
    }
    public function logoutAction()
    {
        Info::LoginService()->SignOut();

        $this->redirect()->toRoute("administrator/login");
    }


    public function sectionDetailsAction()
    {

        $view=new ViewModel();
        $view->setTemplate("courses/sections/details");
        $this->setupVariables($view);

        return $view;
    }

    /**
     * @return ViewModel
     */
    public function courseDetailsAction()
    {

        $view=new ViewModel();
        $view->setTemplate("courses/details");

        /*******************************************************************/
        $this->setupVariables($view);

        return $view;
    }
    public function sectionsAction()
    {

        $course=$this->getCourse();

        $view=new ViewModel();
        $view->setTemplate("courses/sections/index");
        $view->setVariable("sections",Info::SectionTable()->getForCourse($course));
        $view->setVariable("parameters",$this->params()->fromRoute());

        return $view;
    }
    public function addSectionAction()
    {
        $view=new ViewModel();
        $view->setTemplate("courses/sections/add");
        $this->setupVariables($view);
        $course=$this->getCourse();

        /*******************************************************************/
        /* Adding the Section                                              */
        /*******************************************************************/
        if($this->getRequest()->isPost())
        {
            $data=$this->params()->fromPost();

            /***************************************************************/
            $section=Info::SectionTable()->save($course,$data["SectionNumber"],$data);
            if($section==null){
                $view->setVariable("error","Unable to add Section {$data["SectionNumber"]}");
                return $view;
            }

            /***************************************************************/
            $this->redirect()->toRoute("administrator/courses");
            return $view;
        }

        return $view;


    }
    public function coursesAction()
    {
        $view=new ViewModel();
        $view->setTemplate("courses/index");

        /*******************************************************************/
        $view->setVariable("courses",Info::CourseTable()->get());


        /*******************************************************************/
        return $view;
    }

    public function addCoursesAction()
    {
        $view=new ViewModel();
        $view->setTemplate("courses/add-course");

        /*******************************************************************/
        if ($this->getRequest()->isPost())
        {

            /***************************************************************/
            /* Quick Check if already exists                               */
            /***************************************************************/
            $CourseID=$this->params()->fromPost("CourseID");
            $CourseCategory=$this->params()->fromPost("CourseCategory");
            if(($found=Info::CourseTable()->find($CourseCategory,$CourseID))!=null)
            {
                $view->setVariable("existed",true);
                $view->setVariable("found",$found);
                return $view;
            }

            /***************************************************************/
            /* Add Course                                                  */
            /***************************************************************/
            $postParameters=$this->params()->fromPost();
            Info::CourseTable()->save($postParameters);
            $this->redirect()->toRoute("administrator/courses");

            return $view;
        }


        /*******************************************************************/
        return $view;
    }

    public function invitationsAction()
    {
        $view=new ViewModel();
        $view->setTemplate("administrator/invitations/invitations");
        $view->setVariable("invitations",Info::InvitationTable()->getUsersOutgoingInvites());

        return $view;
    }


    public function createInvitationAction()
    {
        $view=new ViewModel();
        $view->setTemplate("administrator/invitations/add-invitation");



        /*******************************************************************/
        if ($this->getRequest()->isPost())
        {
            $info=$this->params()->fromPost();


            if($info["ReasonID"]=="Ins_Reg"){
                $invitation=Info::InvitationTable()->makeJoinInstructorCeloInvitation($info["Email"]);
                EmailService::SendEmail($info["Email"],"Instructor Invite(CELO)","<h1>You have been invited to registetr for <b>CELO</b></h1><a href='http://uh-celo.local/instructor/invitation/{$invitation->getInvitationID()}'>Clear Here</a>");
            }

            $this->redirect()->toRoute("administrator");
            return;
        }

        $view->setVariable("invitations",Info::InvitationTable()->getUsersOutgoingInvites());

        return $view;
    }


    public function addInstructorToSectionAction()
    {

    }


}